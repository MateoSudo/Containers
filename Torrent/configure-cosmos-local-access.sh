#!/bin/bash

echo "üîß Configuring Cosmos for Local Network Access"
echo "============================================="
echo ""

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# Check if we're running as root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå This script must be run as root"
   exit 1
fi

COSMOS_CONFIG="/var/lib/cosmos/cosmos.config.json"
BACKUP_FILE="/var/lib/cosmos/cosmos.config.json.backup.$(date +%Y%m%d_%H%M%S)"

echo "üìã Step 1: Creating backup of current Cosmos configuration..."
cp "$COSMOS_CONFIG" "$BACKUP_FILE"
echo "‚úÖ Backup created: $BACKUP_FILE"

echo "üìã Step 2: Checking current Cosmos configuration..."
if [ ! -f "$COSMOS_CONFIG" ]; then
    echo "‚ùå Cosmos configuration file not found"
    exit 1
fi

echo "üìã Step 3: Adding local subnet to Cosmos whitelist..."

# Create a temporary file with the updated configuration
TEMP_CONFIG=$(mktemp)

# Use jq to update the configuration
if command -v jq &> /dev/null; then
    echo "‚úÖ Using jq to update configuration..."
    jq '.AdminWhitelistIPs = ["192.168.1.0/24"]' "$COSMOS_CONFIG" > "$TEMP_CONFIG"
    
    if [ $? -eq 0 ]; then
        mv "$TEMP_CONFIG" "$COSMOS_CONFIG"
        echo "‚úÖ Configuration updated successfully"
    else
        echo "‚ùå Failed to update configuration with jq"
        rm -f "$TEMP_CONFIG"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  jq not available, using sed method..."
    
    # Create a backup of the current config
    cp "$COSMOS_CONFIG" "$COSMOS_CONFIG.temp"
    
    # Use sed to add the whitelist (this is a fallback method)
    sed -i 's/"AdminWhitelistIPs": null/"AdminWhitelistIPs": ["192.168.1.0\/24"]/' "$COSMOS_CONFIG"
    
    # Verify the change was made
    if grep -q "192.168.1.0/24" "$COSMOS_CONFIG"; then
        echo "‚úÖ Configuration updated successfully"
    else
        echo "‚ùå Failed to update configuration"
        mv "$COSMOS_CONFIG.temp" "$COSMOS_CONFIG"
        exit 1
    fi
fi

echo "üìã Step 4: Restarting Cosmos service..."
systemctl restart cosmos

echo "üìã Step 5: Waiting for Cosmos to restart..."
sleep 5

echo "üìã Step 6: Checking Cosmos service status..."
if systemctl is-active --quiet cosmos; then
    echo "‚úÖ Cosmos is running"
else
    echo "‚ùå Cosmos failed to start"
    echo "üìã Checking logs..."
    journalctl -u cosmos --no-pager -n 10
    exit 1
fi

echo ""
echo "üéâ Cosmos Local Network Access Configuration Complete!"
echo "===================================================="
echo ""
echo "üìã What was configured:"
echo "======================="
echo "‚úÖ Added 192.168.1.0/24 to AdminWhitelistIPs"
echo "‚úÖ Restarted Cosmos service"
echo "‚úÖ Local network access enabled"
echo ""
echo "üìã Access Information:"
echo "======================"
echo "‚Ä¢ Local network devices (192.168.1.x) can access services without authentication"
echo "‚Ä¢ External devices still require authentication"
echo "‚Ä¢ TVs and devices on your local network will work without login"
echo ""
echo "üìã Test URLs for Local Network:"
echo "==============================="
echo "‚Ä¢ Jellyfin: https://jellyfin.mrintellisense.com (no login from 192.168.1.x)"
echo "‚Ä¢ Sonarr: https://sonarr.mrintellisense.com (no login from 192.168.1.x)"
echo "‚Ä¢ Radarr: https://radarr.mrintellisense.com (no login from 192.168.1.x)"
echo "‚Ä¢ Prowlarr: https://prowlarr.mrintellisense.com (no login from 192.168.1.x)"
echo "‚Ä¢ Lidarr: https://lidarr.mrintellisense.com (no login from 192.168.1.x)"
echo "‚Ä¢ Jackett: https://jackett.mrintellisense.com (no login from 192.168.1.x)"
echo ""
echo "üåê For TVs and Devices:"
echo "======================"
echo "‚Ä¢ Smart TVs on 192.168.1.x network: No authentication required"
echo "‚Ä¢ Mobile devices on 192.168.1.x network: No authentication required"
echo "‚Ä¢ External devices: Still require authentication"
echo "‚Ä¢ Direct access still works: http://your-server-ip:8096"
echo ""
echo "‚úÖ Configuration complete! Your local network devices can now access services without login." 